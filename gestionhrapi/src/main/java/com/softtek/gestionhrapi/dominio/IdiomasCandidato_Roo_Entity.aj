// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.softtek.gestionhrapi.dominio;

import com.softtek.gestionhrapi.dominio.IdiomasCandidato;
import com.softtek.gestionhrapi.dominio.IdiomasCandidatoPK;
import java.util.List;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect IdiomasCandidato_Roo_Entity {
    
    declare @type: IdiomasCandidato: @Entity;
    
    declare @type: IdiomasCandidato: @Table(name = "IDIOMAS_CANDIDATO", schema = "FORMACION");
    
    @PersistenceContext
    transient EntityManager IdiomasCandidato.entityManager;
    
    @EmbeddedId
    private IdiomasCandidatoPK IdiomasCandidato.id;
    
    public IdiomasCandidatoPK IdiomasCandidato.getId() {
        return this.id;
    }
    
    public void IdiomasCandidato.setId(IdiomasCandidatoPK id) {
        this.id = id;
    }
    
    @Transactional
    public void IdiomasCandidato.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void IdiomasCandidato.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            IdiomasCandidato attached = IdiomasCandidato.findIdiomasCandidato(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void IdiomasCandidato.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void IdiomasCandidato.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public IdiomasCandidato IdiomasCandidato.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        IdiomasCandidato merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager IdiomasCandidato.entityManager() {
        EntityManager em = new IdiomasCandidato().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static List<IdiomasCandidato> IdiomasCandidato.findAllIdiomasCandidatoes() {
        return entityManager().createQuery("SELECT o FROM IdiomasCandidato o", IdiomasCandidato.class).getResultList();
    }
    
    public static IdiomasCandidato IdiomasCandidato.findIdiomasCandidato(IdiomasCandidatoPK id) {
        if (id == null) return null;
        return entityManager().find(IdiomasCandidato.class, id);
    }
    
    public static List<IdiomasCandidato> IdiomasCandidato.findIdiomasCandidatoEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM IdiomasCandidato o", IdiomasCandidato.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
